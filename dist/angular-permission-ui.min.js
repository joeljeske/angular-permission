/**
 * angular-permission-ui
 * Extension module of angular-permission for access control within ui-router
 * @version v5.1.0 - 2016-12-12
 * @link https://github.com/Narzerus/angular-permission
 * @author Rafael Vidaurre <narzerus@gmail.com> (http://www.rafaelvidaurre.com), Blazej Krysiak <blazej.krysiak@gmail.com>
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */


!function(a,angular,b){"use strict";function c(a){"ngInject";a.decorator("$state",function(a){return a.self.$$permissionState=function(){return a},a})}function d(a,b,c,d,e,f,g){"ngInject";var h=a;return h.$$transitionTo=h.transitionTo,h.transitionTo=function(a,c,i){function j(a){return 0===a.indexOf(".")||0===a.indexOf("^")}function k(){d.toState=o,d.toParams=c,d.fromState=p,d.fromParams=q,d.options=i}function l(){return h.$$transitionTo(d.toState.name,d.toParams,d.options)}function m(){return e.broadcastPermissionAcceptedEvent(),l()}function n(a){return function(b){return e.broadcastPermissionDeniedEvent(),a.resolveRedirectState(b).then(function(a){return h.go(a.state,a.params,a.options)})}}c=c||{},i=angular.extend({location:!0,inherit:!1,relative:null,notify:!0,reload:!1,$retry:!1},i||{});var o,p=h.current,q=h.params,r=angular.isString(a)?a:a.name;if(!i.relative&&j(r))throw new Error("No reference point given for path '"+r+"'");if(o=h.get(r,i.relative),!o)throw new Error("Unfound state '"+r+"'");if(k(),e.isStateChangeStartDefaultPrevented())return b.reject(new Error("transition cancelled"));if(e.isStateChangePermissionStartDefaultPrevented())return l();var s=new g(d.toState);return f.authorizeByPermissionMap(s).then(m,n(s))},h}function e(a,b,c,d){"ngInject";function e(){b.$broadcast(d.permissionStart,c.toState,c.toParams,c.options)}function f(){b.$broadcast(d.permissionAccepted,c.toState,c.toParams,c.options)}function g(){b.$broadcast(d.permissionDenies,c.toState,c.toParams,c.options)}function h(){return b.$broadcast(d.permissionStart,c.toState,c.toParams,c.options).defaultPrevented}function i(){return b.$broadcast("$stateChangeStart",c.toState,c.toParams,c.fromState,c.fromParams,c.options).defaultPrevented}return a.isStateChangeStartDefaultPrevented=i,a.isStateChangePermissionStartDefaultPrevented=h,a.broadcastPermissionStartEvent=e,a.broadcastPermissionAcceptedEvent=f,a.broadcastPermissionDeniedEvent=g,a}function f(a,b){"ngInject";function c(a){return e(a)}function d(a){var d=new b(a);return c(d)}function e(b){var c=a.defer();return f(c,b),c.promise}function f(b,c){var d=h(c.except,c);a.all(d).then(function(a){b.reject(a[0])})["catch"](function(){g(b,c)})}function g(b,c){if(!c.only.length)return void b.resolve();var d=h(c.only,c);a.all(d).then(function(a){b.resolve(a)})["catch"](function(a){b.reject(a)})}function h(b,c){return b.length?b.map(function(b){var d=c.resolvePropertyValidity(b);return a.any(d).then(function(a){return angular.isArray(a)?a[0]:a})}):[a.reject()]}this.authorizeByPermissionMap=c,this.authorizeByState=d}function g(a){"ngInject";function b(b){var d=b.$$permissionState(),e=d.path;angular.forEach(e,function(b){if(c(b)){var d=new a(b.data.permissions);this.extendPermissionMap(d)}},this)}function c(a){try{return Object.prototype.hasOwnProperty.call(a.data,"permissions")}catch(b){return!1}}return b.prototype=new a,b.prototype.extendPermissionMap=function(a){a.only.length&&(this.only=this.only.concat([a.only])),a.except.length&&(this.except=this.except.concat([a.except])),angular.isDefined(a.redirectTo)&&(this.redirectTo=angular.extend({},this.redirectTo,a.redirectTo))},b}c.$inject=["$stateProvider"],d.$inject=["$delegate","$q","$rootScope","PermTransitionProperties","PermTransitionEvents","PermStateAuthorization","PermStatePermissionMap"],e.$inject=["$delegate","$rootScope","PermTransitionProperties","PermTransitionEventNames"],f.$inject=["$q","PermStatePermissionMap"],g.$inject=["PermPermissionMap"];var h=angular.module("permission.ui",["permission","ui.router"]).config(c).decorator("$state",d);"undefined"!=typeof module&&"undefined"!=typeof exports&&module.exports===exports&&(module.exports=h.name),angular.module("permission.ui").decorator("PermTransitionEvents",e);var i={permissionStart:"$stateChangePermissionStart",permissionAccepted:"$stateChangePermissionAccepted",permissionDenies:"$stateChangePermissionDenied"};angular.module("permission.ui").value("PermTransitionEventNames",i),angular.module("permission").service("PermStateAuthorization",f),angular.module("permission.ui").factory("PermStatePermissionMap",g)}(window,window.angular);
//# sourceMappingURL=angular-permission-ui.min.js.map